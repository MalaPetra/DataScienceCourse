matchedData %>% order(Gross domestic product 2012, decreasing = TRUE)
matchedData %>% order("Gross domestic product 2012", decreasing = TRUE)
# read data
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv") %>% rename(CountryCode = X1, GDPrank = "Gross domestic product 2012") -> GDP
head(GDP)
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
matchedData %>% order(GDPrank, decreasing = TRUE)
matchedData %>% order(gdprank, decreasing = TRUE)
matchedData
matchedData %>% order(GDPrank, decreasing = TRUE)
matchedData %>% order(matchedData$GDPrank, decreasing = TRUE)
matchedData %>% arrange(GDPrank, decreasing = TRUE)
matchedData %>% arrange(desc(GDPrank))
arrange(matchedData, desc(GDPrank))
arrange(matchedData, desc(GDPrank)) -> matchedDataArrange
matchedDataArrange %>% list(CountryCode, GDPRank, X4)][13]
matchedDataArrange %>% list(CountryCode, GDPRank, X4)[13]
matchedData %>% list(CountryCode, GDPRank, X4)[13]
matchedData
matchedData %>% list(CountryCode, GDPrank, X4)[13]
list(CountryCode, GDPrank, X4)
list(matchedData$CountryCode, matchedData$GDPrank, matchedData$X4)[13]
arrange(matchedData, desc(GDPrank)) -> matchedDataArrange
arrange(matchedData, desc(GDPrank))[13, 3]
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
sum(!is.na(unique(matchedData$CountryCode)))
matchedData
arrange(matchedData, desc(GDPrank))[13, 3]
arrange(matchedData, desc(GDPrank))[13,4]
arrange(matchedData, desc(GDPrank))[13,11]
arrange(matchedData, desc(GDPrank))[13,11]
Original data sources:
arrange(matchedData, desc(GDPrank))[13,11]
arrange(matchedData, desc(GDPrank)) -> arrange_matched_data
arrange_matched_data
matchedData
head(EDU)
head(GDP)
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
arrange(matchedData, desc(GDPrank)) -> arrange_matched_data
arrange_matched_data
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv") %>% rename(CountryCode = X1, GDPrank = "Gross domestic product 2012"),
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", rename(CountryCode = X1, GDPrank = "Gross domestic product 2012"),
skip = 5,
nrows = 190,
stringsAsFactors = F,
header = F)
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", rename(CountryCode = X1, GDPrank = "Gross domestic product 2012"),
skip = 5)
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", rename(CountryCode = X1, GDPrank = "Gross domestic product 2012"),
skip = 5)
GDP
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", rename(CountryCode = X1, GDPrank = "Gross domestic product 2012"),
skip = 5)
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", rename(CountryCode = x1, GDPrank = "Gross domestic product 2012"),
skip = 5)
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", rename(CountryCode = X1, GDPrank = "Gross domestic product 2012"),
skip = 5)
library(dplyr)
library(readr)
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", rename(CountryCode = X1, GDPrank = "Gross domestic product 2012"),
skip = 5)
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv") %>% rename(CountryCode = X1, GDPrank = "Gross domestic product 2012"),
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv") %>% rename(CountryCode = X1, GDPrank = "Gross domestic product 2012") %>%
skip = 5)
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv") %>% rename(CountryCode = X1, GDPrank = "Gross domestic product 2012") %>%
skip = 5
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv") %>% rename(CountryCode = X1, GDPrank = "Gross domestic product 2012") %>%
# EDU data
url_4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv") %>% rename(CountryCode = X1, GDPrank = "Gross domestic product 2012") %>%
# EDU data
url_4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv") %>% rename(CountryCode = X1, GDPrank = "Gross domestic product 2012")
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
GDP$GDP.Value <- as.numeric(gsub(",", "", gdpData$GDP.Value))
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
gdp
head(GDP)
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[4:, c(1, 2, 4, 5)]
head(GDP)
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip = 4)
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
head(GDP)
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
sum(!is.na(unique(matchedData$CountryCode)))
arrange(matchedData, desc(GDPrank)) -> arrange_matched_data
arrange(matchedData, desc(Rank)) -> arrange_matched_data
arrange(matchedData, desc(Rank)) -> arrange_matched_data[3,13]
arrange_matched_data[3,13]
arrange_matched_data[3,]
arrange_matched_data
EDU
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
matchedData
arrange(matchedData, desc(Rank)) -> arrange_matched_data
arrange_matched_data
arrange_matched_data[13,]
arrange(matchedData, desc(Rank), is.na = FALSE) -> arrange_matched_data
GDP
arrange(matchedData, desc(Rank), na.rm=TRUE) -> arrange_matched_data
matchedData %>% arrange(desc(Rank), na.rm=TRUE) -> arrange_matched_data
matchedData %>% na.omit(Rank)
arrange(desc(Rank) -> arrange_matched_data
matchedData %>% na.omit(Rank) %>% arrange(desc(Rank) -> arrange_matched_data
matchedData %>% na.omit(Rank) %>% arrange(desc(Rank)) -> arrange_matched_data
arrange_matched_data
matchedData %>% filter(!is.na(Rank)) %>% arrange(desc(Rank)) -> arrange_matched_data
arrange_matched_data
matchedData %>% filter(!is.na(CountryCode)) %>% arrange(desc(Rank)) -> arrange_matched_data
arrange_matched_data
# Display row 13
arrange_matched_data[13,]
# Tidy and arrange data
matchedData %>% filter(!is.na(CountryCode)) %>% arrange(desc(Rank)) -> arrange_matched_data
arrange_matched_data
# Tidy and arrange data
matchedData %>% filter(!is.na(CountryCode)) %>% arrange(as.integer(desc(Rank))) -> arrange_matched_data
# Display row 13
arrange_matched_data[13,]
# Tidy and arrange data
matchedData %>% filter(!is.na(CountryCode)) %>% arrange(as.integer(desc(Rank))) -> arrange_matched_data
arrange_matched_data
is.integer(matchedData$Rank)
is.integer(arrange_matched_data$Rank)
arrange_matched_data %>% as.integer(Rank)
arrange_matched_data %>% as.integer(rank)
arrange_matched_data
arrange_matched_data %>% as.integer(Rank)
as.integer(arrange_matched_data$Rank)
as.integer(arrange_matched_data$Rank) -> arrange_matched_data$Rank
is.integer(arrange_matched_data$Rank)
# Display row 13
arrange_matched_data[13,]
as.integer(matchedData$Rank) -> matchedData$Rank
matchedData %>% filter(!is.na(CountryCode)) %>% arrange(as.integer(desc(Rank))) -> arrange_matched_data
is.integer(arrange_matched_data$Rank)
# Display row 13
arrange_matched_data[13,]
sum(!is.na(unique(matchedData$CountryCode)))
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
url_4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile_4 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/edu.csv"
EDU <- download.file(url_4, destfile_4, method = "curl")
EDU <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/edu.csv")
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
GDP
library(dplyr)
library(readr)
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip = 4)
url_4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile_4 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/edu.csv"
EDU <- download.file(url_4, destfile_4, method = "curl")
EDU <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/edu.csv")
GDP
GDP
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
sum(!is.na(unique(matchedData$CountryCode)))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip = 4,  nrows = 215)
GDP
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip = 4)
GDP
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip = 4)
GDP
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip = 4, skip = -10)
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip = -10)
GDP
GDP[4:310]
GDP[4:310,]
GDP
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv")
GDP[4:310,] -> GDP2
GDP2
GDP[5:240,] -> GDP2
GDP2
GDP[5:231,] -> GDP2
GDP2
GDP[5:232,] -> GDP2
GDP2
GDP[5:238,] -> GDP2
GDP2
GDP2
GDP[5:235,] -> GDP2
GDP2
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv") %>% GDP[5:235,]
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv") %>% [5:235,]
GDP[5:235,]
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
sum(!is.na(unique(matchedData$CountryCode)))
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv")
GDP[5:235,] -> GDP
GDP
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
sum(!is.na(unique(matchedData$CountryCode)))
matchedData
dim(matchedData)
GDP
GDP[5:190,] -> GDP
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv")
# Get only first 190 rows
GDP[5:190,] -> GDP
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
sum(!is.na(unique(matchedData$CountryCode)))
dim(matchedData)
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
library(dplyr)
library(readr)
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv")
# Get only first 190 rows
GDP[5:190,] -> GDP
View(GDP)
url_4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile_4 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/edu.csv"
EDU <- download.file(url_4, destfile_4, method = "curl")
EDU <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/edu.csv")
EDU
View(EDU)
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
sum(!is.na(unique(matchedData$CountryCode)))
sum(!is.na(unique(matchedData$CountryCode))) -> t
t
dim(matchedData)
!is.na(unique(matchedData$CountryCode))
unique(matchedData$CountryCode)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "quiz3data.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "quiz3data2.csv")
countries = fread("quiz3data.csv", skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
education = fread("quiz3data2.csv")
all = merge(countries, education, by = "CountryCode")
dim(all)
countries
GDP
# Get only first 190 rows
GDP[5:195,] -> GDP
GDP
# Get only first 190 rows
GDP[5:190,] -> GDP
EDU
education
EDU
GDP
# Get only first 190 rows
GDP[4:190,] -> GDP
GDP
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv")
GDP
DP
GDP
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
GDP
GDP[GDP$Rank>=1 || GDP$Rank < 200]
GDP[GDP$Rank>=1 || GDP$Rank < 200,]
head(GDP)
GDP[GDP$Rank>=1 | GDP$Rank < 200,]
head(GDP)
GDP[GDP$Rank>1 | GDP$Rank < 200,]
GDP %>% drop_na(Rank)
library(tidyr)
install.packages("tidyr")
library(tidyr)
GDP %>% drop_na(Rank)
head(GDP)
GDP %>% drop_na(Rank) -> gdp2
head(gdp2)
drop_na(GDP$Rank) -> gdp
head(gdp)
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv")
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
drop_na(GDP$Rank) -> gdp
GDP %>% drop_na(Rank) -> gdp
GDP %>% drop_na(Rank) -> GDP
head(GDP)
GDP %>% drop_na(Rank) %>% skip(n=1)
GDP %>% drop_na(Rank) %>% skip(1)
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip=4)
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
GDP
GDP %>% drop_na(Rank)
head(GDP)
View(GDP)
GDP %>% drop_na(Rank) -> GDP
View(GDP)
View(GDP)
GDP %>% drop_na(Rank) -> GDP[1:190,]
GDP %>% drop_na(Rank) -> GDP[1:190,] -> GDP
GDP
View(GDP)
GDP %>% drop_na(Rank) -> GDP[1:190,] -> GDP3
GDP3
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip=4)
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP
GDP
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip=4)
View(GDP)
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip=4)
GDP
# Tidy data
GDP %>% drop_na(Rank) -> GDP[1:190,] -> GDP
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
# Tidy data
GDP %>% drop_na(Rank) -> GDP[1:190,] -> GDP
GDP
# Tidy data
GDP %>% drop_na(Rank) -> GDP[1:180,] -> GDP
GDP
# Tidy data
GDP %>% drop_na(Rank) %>% subset(Rank < 190)
# Tidy data
GDP %>% drop_na(Rank) %>% subset(Rank < 200)
# Tidy data
GDP %>% drop_na(Rank) %>% subset(is.integer(Rank) < 200)
# Tidy data
GDP %>% drop_na(Rank) %>% subset(is.integer(Rank) < 190)
# Final dataset
GDP[1:50,]
# Final dataset
GDP[1:194,]
# Final dataset
GDP[1:190,]
# Tidy data
GDP %>% drop_na(Rank) -> GDP[1:190,]
url_4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile_4 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/edu.csv"
EDU <- download.file(url_4, destfile_4, method = "curl")
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
GDP <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/gdp.csv", skip=4)
## Subset only needed data, name columns in gdpData and convert GDP Value to numeric
GDP <- GDP[, c(1, 2, 4, 5)]
colnames(GDP) <- c("CountryCode", "Rank", "Country.Name", "GDP.Value")
# Tidy data
GDP %>% drop_na(Rank) -> GDP
# Final dataset
GDP[1:190,]
matchedData <- merge(GDP, EDU, all = TRUE, by = "CountryCode")
# Final dataset
GDP[1:190,] -> gdp_output
matchedData <- merge(gdp_output, EDU, all = TRUE, by = "CountryCode")
EDU
url_4 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
destfile_4 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/edu.csv"
EDU <- download.file(url_4, destfile_4, method = "curl")
EDU <- read_csv("~/Documents/GitHub/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/edu.csv")
matchedData <- merge(gdp_output, EDU, all = TRUE, by = "CountryCode")
sum(!is.na(unique(matchedData$CountryCode)))
dim(matchedData)
# GDP data
url_3 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
destfile_3 <- "~/documents/github/datasciencecoursera/3-Getting-And-Cleaning-Data/Data/GDP.csv"
GDP <- download.file(url_3, destfile_3, method = "curl")
matchedData
all = merge(countries, education, by = "CountryCode")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "quiz3data.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "quiz3data2.csv")
countries = fread("quiz3data.csv", skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
education = fread("quiz3data2.csv")
all = merge(countries, education, by = "CountryCode")
dim(all)
all
matchedData
EDU
all
EDU
gdp_output
education
countries
all = merge(countries, education, by = "CountryCode")
dim(all)
all
matchedData <- merge(gdp_output, EDU, by = "CountryCode")
sum(!is.na(unique(matchedData$CountryCode)))
matchedData
sum(!is.na(unique(matchedData$CountryCode)))
unique(matchedData$CountryCode)
dim(matchedData)
# Tidy and arrange data
## change format of rank to integer
as.integer(matchedData$Rank) -> matchedData$Rank
# Tidy and arrange data
## change format of rank to integer
as.integer(matchedData$Rank) -> matchedData$Rank
# filter out NAs and sort by Rank
matchedData %>% arrange(as.integer(desc(Rank))) -> arrange_matched_data
# Display row 13
arrange_matched_data[13,]
matchedData
tapply(matchedData$Rank, matchedData$`Income Group`, mean)
matchedData$RankGroups <- cut2(matchedData$Rank, g=5)
library(hmic)
library(Hmisc)
install.packages("hmisc")
install.packages("Hmisc")
library(Hmisc)
matchedData$RankGroups <- cut2(matchedData$Rank, g=5)
table(matchedData$RankGroups, matchedData$`Income Group`)
table(matchedData$RankGroups, matchedData$`Income Group`)
table(matchedData$RankGroups, matchedData$`Income Group`)[4]
table(matchedData$RankGroups, matchedData$`Income Group`)[3]
table(matchedData$RankGroups, matchedData$`Income Group`)[1]
matchedData$RankGroups <- cut2(matchedData$Rank, g=5)
table(matchedData$RankGroups, matchedData$`Income Group`)
