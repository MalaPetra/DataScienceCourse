interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
cr <- corr("specdata")
cor_results
View(corr)
set_directory
set_directory <- "~/Documents/github/datasciencecoursera/2-R-Programming/Data/specdata"
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of  the pollutant for which we will calcultate the
## mean; either "sulfate" or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result
means <- c()
getwd()
for(monitor in id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
monitor_data <- read.csv(path)
interested_data <- monitor_data[pollutant]
means <- c(means, interested_data[!is.na(interested_data)])
}
mean(means)
}
complete <- function(directory, id = 1:332){
## 'director' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the from:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
results <- data.frame(id=numeric(0), nobs=numeric(0))
for(monitor in id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
monitor_data <- read.csv(path)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
nobs <- nrow(interested_data)
results <- rbind(results, data.frame(id=monitor, nobs=nobs))
}
results
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
corr <- function(set_directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) requi?red to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cor_results <- numeric(0)
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
#print(complete_cases["id"])
#print(unlist(complete_cases["id"]))
#print(complete_cases$id)
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste(set_directory, "/", "/", sprintf("%03d", monitor), ".csv", sep = "")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
cr <- corr("specdata")
cr <- corr(set_directory)
cr <- corr(specdata)
cr <- corr("specdata")
path <- paste("~/Documents/github/datasciencecoursera/2-R-Programming/Data/", "/", "/", sprintf("%03d", monitor), ".csv", sep = "")
corr <- function(set_directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) requi?red to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cor_results <- numeric(0)
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
#print(complete_cases["id"])
#print(unlist(complete_cases["id"]))
#print(complete_cases$id)
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste("~/Documents/github/datasciencecoursera/2-R-Programming/Data/", "/", "/", sprintf("%03d", monitor), ".csv", sep = "")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
cr <- corr("specdata")
path
path <- paste("~/Documents/github/datasciencecoursera/2-R-Programming/Data/", "/", "/", sprintf("%03d", monitor), ".csv", sep = "")
complete_cases <- complete(set_directory)
complete_cases
corr <- function(set_directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) requi?red to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cor_results <- numeric(0)
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
#print(complete_cases["id"])
#print(unlist(complete_cases["id"]))
#print(complete_cases$id)
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste(set_directory, "/", "/", sprintf("%03d", monitor), ".csv", sep = "")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
cr <- corr("specdata")
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of  the pollutant for which we will calcultate the
## mean; either "sulfate" or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result
means <- c()
getwd()
for(monitor in id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
monitor_data <- read.csv(path)
interested_data <- monitor_data[pollutant]
means <- c(means, interested_data[!is.na(interested_data)])
}
mean(means)
}
complete <- function(directory, id = 1:332){
## 'director' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the from:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
results <- data.frame(id=numeric(0), nobs=numeric(0))
for(monitor in id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
monitor_data <- read.csv(path)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
nobs <- nrow(interested_data)
results <- rbind(results, data.frame(id=monitor, nobs=nobs))
}
results
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
corr <- function(set_directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) requi?red to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cor_results <- numeric(0)
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
#print(complete_cases["id"])
#print(unlist(complete_cases["id"]))
#print(complete_cases$id)
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste(set_directory, "/", "/", sprintf("%03d", monitor), ".csv", sep = "")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
corr <- function(set_directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) requi?red to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cor_results <- numeric(0)
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
#print(complete_cases["id"])
#print(unlist(complete_cases["id"]))
#print(complete_cases$id)
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
cr <- corr("specdata")
corr <- function(set_directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) requi?red to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cor_results <- numeric(0)
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
#print(complete_cases["id"])
#print(unlist(complete_cases["id"]))
#print(complete_cases$id)
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "/")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
cr <- corr("specdata")
set_directory <- "~/Documents/github/datasciencecoursera/2-R-Programming/Data/specdata/"
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of  the pollutant for which we will calcultate the
## mean; either "sulfate" or "nitrate"
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result
means <- c()
getwd()
for(monitor in id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
monitor_data <- read.csv(path)
interested_data <- monitor_data[pollutant]
means <- c(means, interested_data[!is.na(interested_data)])
}
mean(means)
}
complete <- function(directory, id = 1:332){
## 'director' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the from:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
results <- data.frame(id=numeric(0), nobs=numeric(0))
for(monitor in id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
monitor_data <- read.csv(path)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
nobs <- nrow(interested_data)
results <- rbind(results, data.frame(id=monitor, nobs=nobs))
}
results
}
pollutantmean("specdata", "sulfate", 1:10)
corr <- function(set_directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) requi?red to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cor_results <- numeric(0)
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
#print(complete_cases["id"])
#print(unlist(complete_cases["id"]))
#print(complete_cases$id)
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
cr <- corr("specdata")
getwd()
getwd(path)
set_directory <- "~/Documents/github/datasciencecoursera/2-R-Programming/Data/"
set_directory
set_directory <- "~/Documents/github/datasciencecoursera/2-R-Programming/Data/specdata"
monitor_data <- read.csv(path)
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
for(monitor in complete_cases$id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
complete_cases <- complete(set_directory)
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
corr <- function(set_directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) requi?red to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cor_results <- numeric(0)
complete_cases <- complete(directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
#print(complete_cases["id"])
#print(unlist(complete_cases["id"]))
#print(complete_cases$id)
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste(set_directory, "/",set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
cr <- corr("specdata")
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) requi?red to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cor_results <- numeric(0)
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
#print(complete_cases["id"])
#print(unlist(complete_cases["id"]))
#print(complete_cases$id)
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste(set_directory, "/",set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
cr <- corr("specdata")
corr <- function(directory, threshold = 0){
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) requi?red to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
## NOTE: Do not round the result!
cor_results <- numeric(0)
complete_cases <- complete(set_directory)
complete_cases <- complete_cases[complete_cases$nobs>=threshold, ]
#print(complete_cases["id"])
#print(unlist(complete_cases["id"]))
#print(complete_cases$id)
if(nrow(complete_cases)>0){
for(monitor in complete_cases$id){
path <- paste(set_directory, "/", sprintf("%03d", monitor), ".csv", sep = "")
#print(path)
monitor_data <- read.csv(path)
#print(monitor_data)
interested_data <- monitor_data[(!is.na(monitor_data$sulfate)), ]
interested_data <- interested_data[(!is.na(interested_data$nitrate)), ]
sulfate_data <- interested_data["sulfate"]
nitrate_data <- interested_data["nitrate"]
cor_results <- c(cor_results, cor(sulfate_data, nitrate_data))
}
}
cor_results
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
